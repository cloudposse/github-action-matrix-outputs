name: 'Example composite GitHub action'
description: 'Example composite GitHub action'
author: hello@cloudposse.com
branding:
  icon: 'file'
  color: 'white'
inputs:
  matrix-key:
    required: false
    description: "Matrix key"
  write:
    required: false
    description: "Write YAML structured map of outputs"
  read:
    required: false
    description: "Read YAML structured map of outputs"
outputs:
  result:
    description: "Outputs result"
    value: "${{ steps.context.outputs.result }}"
runs:
  using: "composite"
  steps:
    - name: 'Setup jq'
      uses: dcarbone/install-jq-action@v1.0.0
      with:
        version: 1.5
        force: 'true'

    - name: 'Setup yq'
      uses: dcarbone/install-yq-action@v1.0.0
      if: ${{ inputs.read == null || inputs.read == '' }}
      with:
        version: "v4.28.1"
        download-compressed: true
        force: true

    - shell: bash
      if: ${{ inputs.read == null || inputs.read == '' }}
      run: |
        WRITE=$( echo "${{ inputs.write }}" | yq --output-format json  --no-colors --exit-status | jq . -c -e -M)
        echo "${WRITE}" > matrix
        echo "::set-output name=matrix::$matrix"
      id: matrix

    - uses: actions/upload-artifact@v3
      if: ${{ inputs.read == null || inputs.read == '' }}
      with:
        name: ${{ hashFiles('matrix') || 'none' }}
        path: matrix
        if-no-files-found: warn

    - uses: actions/download-artifact@v3
      if: ${{ inputs.read != null && inputs.read != '' }}
    - shell: bash
      if: ${{ inputs.read != null && inputs.read != '' }}
      run: |
        matrix="$(cat */matrix | jq -c --slurp .)"
        echo "::set-output name=result::$matrix"
      id: context

